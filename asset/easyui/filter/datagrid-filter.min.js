
(function(d){function e(v){if (d(v).data("treegrid")){return"treegrid"} else{return"datagrid"}}var o = d.fn.datagrid.methods.autoSizeColumn; var b = d.fn.datagrid.methods.loadData; var s = d.fn.datagrid.methods.appendRow; var m = d.fn.datagrid.methods.deleteRow; d.extend(d.fn.datagrid.methods, {autoSizeColumn:function(w, v){return w.each(function(){var x = d(this).datagrid("getPanel").find(".datagrid-header .datagrid-filter-c"); x.css({width:"1px", height:0}); o.call(d.fn.datagrid.methods, d(this), v); x.css({width:"", height:""}); p(this, v)})}, loadData:function(w, v){w.each(function(){d.data(this, "datagrid").filterSource = null}); return b.call(d.fn.datagrid.methods, w, v)}, appendRow:function(x, w){var v = s.call(d.fn.datagrid.methods, x, w); x.each(function(){var y = d(this).data("datagrid"); if (y.filterSource){y.filterSource.total++; if (y.filterSource.rows != y.data.rows){y.filterSource.rows.push(w)}}}); return v}, deleteRow:function(w, v){w.each(function(){var z = d(this).data("datagrid"); var y = z.options; if (z.filterSource && y.idField){if (z.filterSource.rows == z.data.rows){z.filterSource.total--} else{for (var x = 0; x < z.filterSource.rows.length; x++){var A = z.filterSource.rows[x]; if (A[y.idField] == z.data.rows[v][y.idField]){z.filterSource.rows.splice(x, 1); z.filterSource.total--; break}}}}}); return m.call(d.fn.datagrid.methods, w, v)}}); var a = d.fn.treegrid.methods.loadData; var r = d.fn.treegrid.methods.append; var u = d.fn.treegrid.methods.insert; var f = d.fn.treegrid.methods.remove; d.extend(d.fn.treegrid.methods, {loadData:function(w, v){w.each(function(){d.data(this, "treegrid").filterSource = null}); return a.call(d.fn.treegrid.methods, w, v)}, append:function(w, v){return w.each(function(){var z = d(this).data("treegrid"); var x = z.options; if (x.oldLoadFilter){var y = h(this, v.data, v.parent); z.filterSource.total += y.length; z.filterSource.rows = z.filterSource.rows.concat(y); d(this).treegrid("loadData", z.filterSource)} else{r(d(this), v)}})}, insert:function(w, v){return w.each(function(){var E = d(this).data("treegrid"); var B = E.options; if (B.oldLoadFilter){var A = v.before || v.after; var y = C(v.before || v.after); var x = y >= 0?E.filterSource.rows[y]._parentId:null; var D = h(this, [v.data], x); var z = E.filterSource.rows.splice(0, y >= 0?(v.before?y:y + 1):(E.filterSource.rows.length)); z = z.concat(D); z = z.concat(E.filterSource.rows); E.filterSource.total += D.length; E.filterSource.rows = z; d(this).treegrid("loadData", E.filterSource); function C(H){var G = E.filterSource.rows; for (var F = 0; F < G.length; F++){if (G[F][B.idField] == H){return F}}return - 1}} else{u(d(this), v)}})}, remove:function(w, v){w.each(function(){var A = d(this).data("treegrid"); if (A.filterSource){var y = A.options; var z = A.filterSource.rows; for (var x = 0; x < z.length; x++){if (z[x][y.idField] == v){z.splice(x, 1); A.filterSource.total--; break}}}}); return f(w, v)}}); var q = {filterMenuIconCls:"icon-ok", filterBtnIconCls:"icon-filter", filterBtnPosition:"right", filterPosition:"bottom", remoteFilter:false, showFilterBar:true, filterDelay:400, filterRules:[], filterMatchingType:"all", filterIncludingChild:false, filterMatcher:function(D){var x = e(this); var G = d(this); var w = d.data(this, x); var v = w.options; if (v.filterRules.length){var I = []; if (x == "treegrid"){var B = {}; d.map(D.rows, function(K){if (A(K, K[v.idField])){B[K[v.idField]] = K; var J = E(D.rows, K._parentId); while (J){B[J[v.idField]] = J; J = E(D.rows, J._parentId)}if (v.filterIncludingChild){var L = F(D.rows, K[v.idField]); d.map(L, function(M){B[M[v.idField]] = M})}}}); for (var y in B){I.push(B[y])}} else{for (var C = 0; C < D.rows.length; C++){var H = D.rows[C]; if (A(H, C)){I.push(H)}}}D = {total:D.total - (D.rows.length - I.length), rows:I}}return D; function A(S, P){if (v.val == d.fn.combogrid.defaults.val){v.val = q.val}var R = v.filterRules; if (!R.length){return true}for (var N = 0; N < R.length; N++){var Q = R[N]; var L = G.datagrid("getColumnOption", Q.field); var M = (L && L.formatter)?L.formatter(S[Q.field], S, P):undefined; var J = v.val.call(G[0], S, Q.field, M); if (J == undefined){J = ""}var O = v.operators[Q.op]; var K = O.isMatch(J, Q.value); if (v.filterMatchingType == "any"){if (K){return true}} else{if (!K){return false}}}return v.filterMatchingType == "all"}function E(K, M){for (var J = 0; J < K.length; J++){var L = K[J]; if (L[v.idField] == M){return L}}return null}function F(L, O){var N = z(L, O); var J = d.extend(true, [], N); while (J.length){var M = J.shift(); var K = z(L, M[v.idField]); N = N.concat(K); J = J.concat(K)}return N}function z(K, N){var M = []; for (var J = 0; J < K.length; J++){var L = K[J]; if (L._parentId == N){M.push(L)}}return M}}, defaultFilterType:"text", defaultFilterOperator:"custom", defaultFilterOptions:{onInit:function(A){var w = e(A); var y = d(A)[w]("options"); var z = d(this).attr("name"); var v = d(this); if (v.data("textbox")){v = v.textbox("textbox")}v.unbind(".filter").bind("keydown.filter", function(C){var B = d(this); if (this.timer){clearTimeout(this.timer)}if (C.keyCode == 13){x()} else{this.timer = setTimeout(function(){x()}, y.filterDelay)}}); function x(){var C = d(A)[w]("getFilterRule", z); var B = v.val(); if (B != ""){if ((C && C.value != B) || !C){d(A)[w]("addFilterRule", {field:z, op:y.defaultFilterOperator, value:B}); d(A)[w]("doFilter")}} else{if (C){d(A)[w]("removeFilterRule", z); d(A)[w]("doFilter")}}}}}, filterStringify:function(v){return JSON.stringify(v)}, val:function(x, w, v){return v || x[w]}, onClickMenu:function(w, v){}}; d.extend(d.fn.datagrid.defaults, q); d.extend(d.fn.treegrid.defaults, q); d.fn.datagrid.defaults.filters = d.extend({}, d.fn.datagrid.defaults.editors, {label:{init:function(v, w){return d("<span></span>").appendTo(v)}, getValue:function(v){return d(v).html()}, setValue:function(w, v){d(w).html(v)}, resize:function(w, v){d(w)._outerWidth(v)._outerHeight(22)}}}); d.fn.treegrid.defaults.filters = d.fn.datagrid.defaults.filters; d.fn.datagrid.defaults.operators = {nofilter:{text:"No Filter"}, custom:{text:"Custom", isMatch:function(x, w){x = String(x).toLowerCase(); w = String(w).toLowerCase(); var v = new RegExp(w, "gi"); if (w.indexOf("!") >= 0){v = new RegExp(w.replace("!", ""), "gi"); return !x.match(v)}return x.match(v)}}, contains:{text:"Contains", isMatch:function(w, v){w = String(w); v = String(v); return w.toLowerCase().indexOf(v.toLowerCase()) >= 0}}, equal:{text:"Equal", isMatch:function(w, v){return w == v}}, notequal:{text:"Not Equal", isMatch:function(w, v){return w != v}}, beginwith:{text:"Begin With", isMatch:function(w, v){w = String(w); v = String(v); return w.toLowerCase().indexOf(v.toLowerCase()) == 0}}, endwith:{text:"End With", isMatch:function(w, v){w = String(w); v = String(v); return w.toLowerCase().indexOf(v.toLowerCase(), w.length - v.length) !== - 1}}, less:{text:"Less", isMatch:function(w, v){return w < v}}, lessorequal:{text:"Less Or Equal", isMatch:function(w, v){return w <= v}}, greater:{text:"Greater", isMatch:function(w, v){return w > v}}, greaterorequal:{text:"Greater Or Equal", isMatch:function(w, v){return w >= v}}}; d.fn.treegrid.defaults.operators = d.fn.datagrid.defaults.operators; function p(B, A){var x = false; var z = d(B); var C = z.datagrid("getPanel").find("div.datagrid-header"); var y = C.find(".datagrid-header-row:not(.datagrid-filter-row)"); var v = A?C.find('.datagrid-filter[name="' + A + '"]'):C.find(".datagrid-filter"); v.each(function(){var F = d(this).attr("name"); var E = z.datagrid("getColumnOption", F); var I = d(this).closest("div.datagrid-filter-c"); var G = I.find("a.datagrid-filter-btn"); var D = y.find('td[field="' + F + '"] .datagrid-cell'); var H = D._outerWidth(); if (H != w(I)){this.filter.resize(this, H - G._outerWidth())}if (I.width() > E.boxWidth + E.deltaWidth - 1){E.boxWidth = I.width() - E.deltaWidth + 1; E.width = E.boxWidth + E.deltaWidth; x = true}}); if (x){d(B).datagrid("fixColumnSize")}function w(E){var D = 0; d(E).children(":visible").each(function(){D += d(this)._outerWidth()}); return D}}function l(w, v){var x = d(w).datagrid("getPanel").find("div.datagrid-header"); return x.find('tr.datagrid-filter-row td[field="' + v + '"] .datagrid-filter')}function t(y, x){var v = e(y); var z = d(y)[v]("options").filterRules; for (var w = 0; w < z.length; w++){if (z[w].field == x){return w}}return - 1}function j(y, x){var w = e(y); var z = d(y)[w]("options").filterRules; var v = t(y, x); if (v >= 0){return z[v]} else{return null}}function g(A, y){var w = e(A); var v = d(A)[w]("options"); var D = v.filterRules; if (y.op == "nofilter"){c(A, y.field)} else{var z = t(A, y.field); if (z >= 0){d.extend(D[z], y)} else{D.push(y)}}var B = l(A, y.field); if (B.length){if (y.op != "nofilter"){var C = B.val(); if (B.data("textbox")){C = B.textbox("getText")}if (C != y.value){B[0].filter.setValue(B, y.value)}}var x = B[0].menu; if (x){x.find("." + v.filterMenuIconCls).removeClass(v.filterMenuIconCls); var E = x.menu("findItem", v.operators[y.op]["text"]); x.menu("setIcon", {target:E.target, iconCls:v.filterMenuIconCls})}}}function c(C, B){var x = e(C); var A = d(C); var z = A[x]("options"); if (B){var w = t(C, B); if (w >= 0){z.filterRules.splice(w, 1)}y([B])} else{z.filterRules = []; var v = A.datagrid("getColumnFields", true).concat(A.datagrid("getColumnFields")); y(v)}function y(D){for (var F = 0; F < D.length; F++){var E = l(C, D[F]); if (E.length){E[0].filter.setValue(E, ""); var G = E[0].menu; if (G){G.find("." + z.filterMenuIconCls).removeClass(z.filterMenuIconCls)}}}}}function i(y){var v = e(y); var x = d.data(y, v); var w = x.options; if (w.remoteFilter){d(y)[v]("load")} else{if (w.view.type == "scrollview" && x.data.firstRows && x.data.firstRows.length){x.data.rows = x.data.firstRows}d(y)[v]("getPager").pagination("refresh", {pageNumber:1}); d(y)[v]("options").pageNumber = 1; d(y)[v]("loadData", x.filterSource || x.data)}}function h(z, w, v){var x = d(z).treegrid("options"); if (!w || !w.length){return[]}var y = []; d.map(w, function(A){A._parentId = v; y.push(A); y = y.concat(h(z, A.children, A[x.idField]))}); d.map(y, function(A){A.children = undefined}); return y}function k(A, B){var E = this; var x = e(E); var w = d.data(E, x); var v = w.options; if (x == "datagrid" && d.isArray(A)){A = {total:A.length, rows:A}} else{if (x == "treegrid" && d.isArray(A)){var J = h(E, A, B); A = {total:J.length, rows:J}}}if (!v.remoteFilter){if (!w.filterSource){w.filterSource = A} else{if (!v.isSorting){if (x == "datagrid"){w.filterSource = A} else{w.filterSource.total += A.length; w.filterSource.rows = w.filterSource.rows.concat(A.rows); if (B){return v.filterMatcher.call(E, A)}}} else{v.isSorting = undefined}}if (!v.remoteSort && v.sortName){var G = v.sortName.split(","); var z = v.sortOrder.split(","); var H = d(E); w.filterSource.rows.sort(function(L, K){var O = 0; for (var N = 0; N < G.length; N++){var Q = G[N]; var P = z[N]; var M = H.datagrid("getColumnOption", Q); var R = M.sorter || function(T, S){return T == S?0:(T > S?1: - 1)}; O = R(L[Q], K[Q]) * (P == "asc"?1: - 1); if (O != 0){return O}}return O})}A = v.filterMatcher.call(E, {total:w.filterSource.total, rows:w.filterSource.rows, footer:w.filterSource.footer || []}); if (v.pagination){var H = d(E); var y = H[x]("getPager"); y.pagination({onSelectPage:function(L, K){d(y).find("a.l-btn").each(function(){try{d(this).tooltip("hide")} catch (M){}}); v.pageNumber = L; v.pageSize = K; y.pagination("refresh", {pageNumber:L, pageSize:K}); H[x]("loadData", w.filterSource)}}); if (x == "datagrid"){var F = C(A.rows); v.pageNumber = F.pageNumber; A.rows = F.rows} else{var D = []; var I = []; d.map(A.rows, function(K){K._parentId?I.push(K):D.push(K)}); A.total = D.length; var F = C(D); v.pageNumber = F.pageNumber; A.rows = F.rows.concat(I)}}d.map(A.rows, function(K){K.children = undefined})}return A; function C(L){var N = []; var M = v.pageNumber; while (M > 0){var O = (M - 1) * parseInt(v.pageSize); var K = O + parseInt(v.pageSize); N = L.slice(O, K); if (N.length){break}M--}return{pageNumber:M > 0?M:1, rows:N}}}function n(F, C){C = C || []; var z = e(F); var y = d.data(F, z); var v = y.options; if (!v.filterRules.length){v.filterRules = []}v.filterCache = v.filterCache || {}; var B = d.data(F, "datagrid").options; var w = B.onResize; B.onResize = function(K, J){p(F); w.call(this, K, J)}; var A = B.onBeforeSortColumn; B.onBeforeSortColumn = function(L, K){var J = A.call(this, L, K); if (J != false){v.isSorting = true}return J}; var I = v.onResizeColumn; v.onResizeColumn = function(M, K){var J = d(this).datagrid("getPanel").find(".datagrid-header .datagrid-filter-c"); var L = J.find(".datagrid-filter:focus"); J.hide(); d(F).datagrid("fitColumns"); if (v.fitColumns){p(F)} else{p(F, M)}J.show(); L.blur().focus(); I.call(F, M, K)}; var E = v.onBeforeLoad; v.onBeforeLoad = function(N, M){if (N){N.filterRules = v.filterStringify(v.filterRules)}if (M){M.filterRules = v.filterStringify(v.filterRules)}var J = E.call(this, N, M); if (J != false && v.url){if (z == "datagrid"){y.filterSource = null} else{if (z == "treegrid" && y.filterSource){if (N){var O = N[v.idField]; var L = y.filterSource.rows || []; for (var K = 0; K < L.length; K++){if (O == L[K]._parentId){return false}}} else{y.filterSource = null}}}}return J}; v.loadFilter = function(J, L){var K = v.oldLoadFilter.call(this, J, L); return k.call(this, K, L)}; y.dc.view2.children(".datagrid-header").unbind(".filter").bind("focusin.filter", function(J){var K = d(this); setTimeout(function(){y.dc.body2._scrollLeft(K._scrollLeft())}, 0)}); H(); D(true); D(); if (v.fitColumns){setTimeout(function(){p(F)}, 0)}d.map(v.filterRules, function(J){g(F, J)}); function H(){if (!d("#datagrid-filter-style").length){d("head").append('<style id="datagrid-filter-style">a.datagrid-filter-btn{display:inline-block;width:22px;height:22px;margin:0;vertical-align:top;cursor:pointer;opacity:0.6;filter:alpha(opacity=60);}a:hover.datagrid-filter-btn{opacity:1;filter:alpha(opacity=100);}.datagrid-filter-row .textbox,.datagrid-filter-row .textbox .textbox-text{-moz-border-radius:0;-webkit-border-radius:0;border-radius:0;}.datagrid-filter-row input{margin:0;-moz-border-radius:0;-webkit-border-radius:0;border-radius:0;}.datagrid-filter-c{overflow:hidden}.datagrid-filter-cache{position:absolute;width:10px;height:10px;left:-99999px;}</style>')}}function D(J){var U = y.dc; var Q = d(F).datagrid("getColumnFields", J); if (J && v.rownumbers){Q.unshift("_")}var V = (J?U.header1:U.header2).find("table.datagrid-htable"); V.find(".datagrid-filter").each(function(){if (this.filter.destroy){this.filter.destroy(this)}if (this.menu){d(this.menu).menu("destroy")}}); V.find("tr.datagrid-filter-row").remove(); var R = d('<tr class="datagrid-header-row datagrid-filter-row"></tr>'); if (v.filterPosition == "bottom"){R.appendTo(V.find("tbody"))} else{R.prependTo(V.find("tbody"))}if (!v.showFilterBar){R.hide()}for (var P = 0; P < Q.length; P++){var T = Q[P]; var N = d(F).datagrid("getColumnOption", T); var O = d("<td></td>").attr("field", T).appendTo(R); if (N && N.hidden){O.hide()}if (N && N.op === "nofilter"){continue}if (T == "_"){continue}if (N && (N.checkbox || N.expander)){continue}var M = G(T); if (M){d(F)[z]("destroyFilter", T)} else{M = d.extend({}, {field:T, type:v.defaultFilterType, options:v.defaultFilterOptions})}var K = v.filterCache[T]; if (!K){K = d('<div class="datagrid-filter-c"></div>').appendTo(O); var L = v.filters[M.type]; var S = L.init(K, d.extend({height:24}, M.options || {})); S.addClass("datagrid-filter").attr("name", T); S[0].filter = L; S[0].menu = x(K, M.op); if (M.options){if (M.options.onInit){M.options.onInit.call(S[0], F)}} else{v.defaultFilterOptions.onInit.call(S[0], F)}v.filterCache[T] = K; p(F, T)} else{K.appendTo(O)}}}function x(K, J){if (!J){return null}var L = d('<a class="datagrid-filter-btn">&nbsp;</a>').addClass(v.filterBtnIconCls); if (v.filterBtnPosition == "right"){L.appendTo(K)} else{L.prependTo(K)}var M = d("<div></div>").appendTo("body"); d.map(["nofilter"].concat(J), function(N){var O = v.operators[N]; if (O){d("<div></div>").attr("name", N).html(O.text).appendTo(M)}}); M.menu({alignTo:L, onClick:function(P){var O = d(this).menu("options").alignTo; var S = O.closest("td[field]"); var R = S.attr("field"); var N = S.find(".datagrid-filter"); var Q = N[0].filter.getValue(N); if (v.onClickMenu.call(F, P, O, R) == false){return}g(F, {field:R, op:P.name, value:Q}); i(F)}}); L[0].menu = M; L.bind("click", {menu:M}, function(N){d(this.menu).menu("show"); return false}); return M}function G(L){for (var J = 0; J < C.length; J++){var K = C[J]; if (K.field == L){return K}}return null}}d.extend(d.fn.datagrid.methods, {enableFilter:function(w, v){return w.each(function(){var x = e(this); var y = d.data(this, x).options; if (y.oldLoadFilter){if (v){d(this)[x]("disableFilter")} else{return}}y.oldLoadFilter = y.loadFilter; n(this, v); d(this)[x]("resize"); if (y.filterRules.length){if (y.remoteFilter){i(this)} else{if (y.data){i(this)}}}})}, disableFilter:function(v){return v.each(function(){var x = e(this); var A = d.data(this, x); var y = A.options; if (!y.oldLoadFilter){return}var w = d(this).data("datagrid").dc; var C = w.view.children(".datagrid-filter-cache"); if (!C.length){C = d('<div class="datagrid-filter-cache"></div>').appendTo(w.view)}for (var B in y.filterCache){d(y.filterCache[B]).appendTo(C)}var z = A.data; if (A.filterSource){z = A.filterSource; d.map(z.rows, function(D){D.children = undefined})}w.header1.add(w.header2).find("tr.datagrid-filter-row").remove(); y.loadFilter = y.oldLoadFilter || undefined; y.oldLoadFilter = null; d(this)[x]("resize"); d(this)[x]("loadData", z)})}, destroyFilter:function(w, v){return w.each(function(){var y = e(this); var B = d.data(this, y); var z = B.options; if (v){x(v)} else{for (var A in z.filterCache){x(A)}d(this).datagrid("getPanel").find(".datagrid-header .datagrid-filter-row").remove(); d(this).data("datagrid").dc.view.children(".datagrid-filter-cache").remove(); z.filterCache = {}; d(this)[y]("resize"); d(this)[y]("disableFilter")}function x(E){var F = d(z.filterCache[E]); var C = F.find(".datagrid-filter"); if (C.length){var D = C[0].filter; if (D.destroy){D.destroy(C[0])}}F.find(".datagrid-filter-btn").each(function(){d(this.menu).menu("destroy")}); F.remove(); z.filterCache[E] = undefined}})}, getFilterRule:function(w, v){return j(w[0], v)}, addFilterRule:function(w, v){return w.each(function(){g(this, v)})}, removeFilterRule:function(w, v){return w.each(function(){c(this, v)})}, doFilter:function(v){return v.each(function(){i(this)})}, getFilterComponent:function(w, v){return l(w[0], v)}, resizeFilter:function(w, v){return w.each(function(){p(this, v)})}})})(jQuery);